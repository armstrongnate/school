# Abstract Data Types

STACK
	push
	pop
	top
	isEmpty()
	init

QUEUE
	enqueue (put on in)
	dequeue (take one out)
	front (look at the one in front)
	isEmpty
	init

	python list doesn't work good with a queue. use a link list?

CONTAINERS
	Unique
	Allows duplicates
	Unordered
		order does not matter
	User Ordered
		where everything is is very important. User says "put this is in position 7."
	Auto ordered
		program maintains order

#! Linked Lists is not an abstract data type. It is an *implementation* of one.

	Linked Lists
		class Node:
			def __init__(self, object, next):
				self.mObject = object
				self.mNext = next
		
		class UnorderedUniqueContainer:
			def __init__(self):
				self.mFirst = None
			def Insert(self, object):
				if not self.Exists(object):
					n = Node(object, self.mFirst)
					return True
					self.mFirst = n
				return False
			def Exists?(self, fakeObject):
				current = self.mFirst
				while current is not None:
					if current.mObject == fakeObject:
						return True
					current = current.mNext
				return False
			Delete(self, fakeObject):
				if not self.Exists(fakeObject):
					return False
				// check if it's the first one.
				if self.mFirst.mObject = fakeObject:
					self.mFirst = self.mFirst.mNext
					return True
				// use a look-ahead to see if the next one is == to the fakeObject we are looking for
				current = self.mFirst
				while current.mNext.mObject != fakeObject:
					current = current.mNext
				current.mNext = current.mNext.mNext
				return True

			Retrieve(self, fakeObject)
			Traverse # get data based on all elements
				use a callBack function so everyone can get their hands on data.