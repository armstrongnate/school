** See notes in notebook for first part of notes

ALU 
	flipping bits (aka "notting") gives you -x-1

	x --> z? --> n? -->
	y --> z? --> n? -->

	-->
		+/& --> n? --> answer
	-->	

	z? means zero?
	n? means not?

Floats
	01011101
		first bit (from left) is a sign bit - positive or negative?
		last 3 bits would be the fraction bits
		next 3 bits exponent bits
			k = number of exponent bits; in this case, 3 (with an 8 bit)
			bias = 2^k-1 - 1; in this case, it's 3
			 what kind of number is this?
				normalized
					exponent bits are not all 1's AND not all 0's
					exponent value = value of bits - bias; in this case, 2
					fraction value
						implicit '1.' in front of fraction value; (1.1101 in this case) <<- equates to 1^13/16 because 13 is the value of 1101, out of 16 because 16 is 2^4.
					now take fraction value (1^13/16) and multiply it by 2^exponent value (29/4 in this case)
							

				denormalized
					exponents are all 0's
					exponent value = 1-bias
					implicit 0 in front of fraction value


				special cases
					exponents are all 1's
					fraction all 0's => infinity
					otherwise => NAN

	WHY??
		00000001 = 1/64
		00110001 = 17/16
		01100000 = 8 = 16/2

When dealing with money, stick to whole numbers (one cent).